{"version":3,"sources":["components/SimpleNutritionTracker.js"],"names":["SimpleNutritionTracker","selectedMeals","setSelectedMeals","useState","saved","localStorage","getItem","JSON","parse","MEALS","id","name","time","_jsxs","className","children","_jsx","map","day","meal","isCompleted","getMealStatus","mealId","concat","onClick","toggleMeal","key","newMeals","_objectSpread","setItem","stringify","window","dispatchEvent","CustomEvent","detail","completed","simple","style","padding","textAlign","marginTop","background","borderRadius","color"],"mappings":"2KAkHeA,UA9GgBA,KAE3B,MAAOC,EAAeC,GAAoBC,mBAAS,KAC/C,MAAMC,EAAQC,aAAaC,QAAQ,wBACnC,OAAOF,EAAQG,KAAKC,MAAMJ,GAAS,CAAC,IAGlCK,EAAQ,CACV,CAAEC,GAAI,YAAaC,KAAM,yBAAgBC,KAAM,QAC/C,CAAEF,GAAI,SAAUC,KAAM,4BAAcC,KAAM,SAC1C,CAAEF,GAAI,QAASC,KAAM,4BAAmBC,KAAM,UAgClD,OACIC,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAC9BF,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC7BC,cAAA,MAAAD,SAAI,mCACJC,cAAA,OAAKF,UAAU,gBAAeC,SAC1BF,eAAA,QAAMC,UAAU,cAAaC,SAAA,CAAC,UACxBC,cAAA,UAAAD,SAAQ,yBAA6B,gBACvCC,cAAA,SAAAD,SAAO,2CAMnBC,cAAA,OAAKF,UAAU,cAAaC,SA1CvB,CAAC,YAAU,aAAW,eAAa,aAAW,aAAW,SAAU,YA2C9DE,IAAIC,GACNL,eAAA,OAAeC,UAAU,WAAUC,SAAA,CAC/BC,cAAA,OAAKF,UAAU,aAAYC,SACvBC,cAAA,MAAAD,SAAKG,MAGTF,cAAA,OAAKF,UAAU,YAAWC,SACrBN,EAAMQ,IAAIE,IACP,MAAMC,EA5BZC,EAACH,EAAKI,IACjBrB,EAAc,GAADsB,OAAIL,EAAG,KAAAK,OAAID,MAAa,EA2BAD,CAAcH,EAAKC,EAAKT,IAE5C,OACIG,eAAA,OAEIC,UAAS,aAAAS,OAAeH,EAAc,YAAc,IAAKL,SAAA,CAEzDF,eAAA,OAAKC,UAAU,cAAaC,SAAA,CACxBC,cAAA,QAAMF,UAAU,YAAWC,SAAEI,EAAKP,OAClCI,cAAA,QAAMF,UAAU,YAAWC,SAAEI,EAAKR,UAGtCK,cAAA,UACIF,UAAS,eAAAS,OAAiBH,EAAc,YAAc,WACtDI,QAASA,IA/D9BC,EAACP,EAAKI,KACrB,MAAMI,EAAG,GAAAH,OAAML,EAAG,KAAAK,OAAID,GAChBK,EAAQC,wBAAA,GACP3B,GAAa,IAChB,CAACyB,IAAOzB,EAAcyB,KAG1BxB,EAAiByB,GACjBtB,aAAawB,QAAQ,uBAAwBtB,KAAKuB,UAAUH,IAG5DI,OAAOC,cAAc,IAAIC,YAAY,cAAe,CAChDC,OAAQ,CACJhB,MACAI,SACAa,WAAYlC,EAAcyB,GAC1BU,QAAQ,OA+CmCX,CAAWP,EAAKC,EAAKT,IAAIK,SAEvCK,EAAc,oBAAiB,mCAZ/BD,EAAKT,UAXpBQ,MAkClBL,eAAA,OAAKC,UAAU,eAAcC,SAAA,CACzBC,cAAA,MAAAD,SAAI,gCACJF,eAAA,KAAAE,SAAA,CACIC,cAAA,UAAAD,SAAQ,kBAAsB,6GAKtCC,cAAA,OAAKqB,MAAO,CAACC,QAAS,OAAQC,UAAW,SAAUC,UAAW,OAAQC,WAAY,yBAA0BC,aAAc,QAAQ3B,SAC9HF,eAAA,KAAGwB,MAAO,CAACM,MAAO,WAAW5B,SAAA,CAAC,UACxBC,cAAA,UAAAD,SAAQ,kCAAsCC,cAAA,SAAK,6CACXA,cAAA,SAAK,yD","file":"static/js/5.eef31523.chunk.js","sourcesContent":["// Simplified Nutrition Tracker - Debug version\r\nimport React, { useState, useEffect } from 'react';\r\n// import { useAuth } from './AuthProvider';\r\n\r\nconst SimpleNutritionTracker = () => {\r\n    // const { user } = useAuth();\r\n    const [selectedMeals, setSelectedMeals] = useState(() => {\r\n        const saved = localStorage.getItem('simpleNutritionMeals');\r\n        return saved ? JSON.parse(saved) : {};\r\n    });\r\n\r\n    const MEALS = [\r\n        { id: 'colazione', name: 'üåÖ Colazione', time: '8:00' },\r\n        { id: 'pranzo', name: 'üçΩÔ∏è Pranzo', time: '12:30' },\r\n        { id: 'snack', name: 'üí™ Post-Workout', time: '15:30' }\r\n    ];\r\n\r\n    const DAYS = ['Luned√¨', 'Marted√¨', 'Mercoled√¨', 'Gioved√¨', 'Venerd√¨', 'Sabato', 'Domenica'];\r\n\r\n    const toggleMeal = (day, mealId) => {\r\n        const key = `${day}-${mealId}`;\r\n        const newMeals = {\r\n            ...selectedMeals,\r\n            [key]: !selectedMeals[key]\r\n        };\r\n        \r\n        setSelectedMeals(newMeals);\r\n        localStorage.setItem('simpleNutritionMeals', JSON.stringify(newMeals));\r\n        \r\n        // üî• TRIGGER EVENTO PER SINCRONIZZAZIONE\r\n        window.dispatchEvent(new CustomEvent('mealToggled', { \r\n            detail: { \r\n                day, \r\n                mealId, \r\n                completed: !selectedMeals[key],\r\n                simple: true \r\n            } \r\n        }));\r\n    };\r\n\r\n    const getMealStatus = (day, mealId) => {\r\n        return selectedMeals[`${day}-${mealId}`] || false;\r\n    };\r\n\r\n    // Autenticazione disabilitata\r\n\r\n    return (\r\n        <div className=\"nutrition-tracker\">\r\n            <div className=\"nutrition-header\">\r\n                <h2>ü•ó Nutrition Tracker</h2>\r\n                <div className=\"eating-window\">\r\n                    <span className=\"window-info\">\r\n                        ‚è∞ <strong>Finestra Alimentare:</strong> 8:00 - 16:00 \r\n                        <small>(Digiuno serale dopo le 16:00)</small>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Grid settimanale semplificata */}\r\n            <div className=\"weekly-grid\">\r\n                {DAYS.map(day => (\r\n                    <div key={day} className=\"day-card\">\r\n                        <div className=\"day-header\">\r\n                            <h4>{day}</h4>\r\n                        </div>\r\n                        \r\n                        <div className=\"day-meals\">\r\n                            {MEALS.map(meal => {\r\n                                const isCompleted = getMealStatus(day, meal.id);\r\n                                \r\n                                return (\r\n                                    <div \r\n                                        key={meal.id}\r\n                                        className={`meal-item ${isCompleted ? 'completed' : ''}`}\r\n                                    >\r\n                                        <div className=\"meal-header\">\r\n                                            <span className=\"meal-time\">{meal.time}</span>\r\n                                            <span className=\"meal-name\">{meal.name}</span>\r\n                                        </div>\r\n                                        \r\n                                        <button\r\n                                            className={`meal-toggle ${isCompleted ? 'completed' : 'pending'}`}\r\n                                            onClick={() => toggleMeal(day, meal.id)}\r\n                                        >\r\n                                            {isCompleted ? '‚úÖ Completato' : '‚≠ï Clicca per completare'}\r\n                                        </button>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Info digiuno */}\r\n            <div className=\"fasting-info\">\r\n                <h4>üåô Digiuno Serale</h4>\r\n                <p>\r\n                    <strong>Dopo le 16:00</strong>: Solo acqua, tisane o t√® senza zucchero.\r\n                    Il digiuno intermittente 8:16 ottimizza il metabolismo!\r\n                </p>\r\n            </div>\r\n\r\n            <div style={{padding: '20px', textAlign: 'center', marginTop: '20px', background: 'rgba(34, 197, 94, 0.1)', borderRadius: '10px'}}>\r\n                <p style={{color: '#22c55e'}}>\r\n                    ‚úÖ <strong>Nutrition Tracker Funzionale!</strong><br/>\r\n                    Clicca sui pulsanti per tracciare i pasti.<br/>\r\n                    Questa √® la versione semplificata di debug.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SimpleNutritionTracker;"],"sourceRoot":""}