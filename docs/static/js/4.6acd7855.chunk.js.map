{"version":3,"sources":["components/AdvancedAnalytics.js"],"names":["ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","Filler","ArcElement","AdvancedAnalytics","navigate","useNavigate","selectedPeriod","setSelectedPeriod","useState","selectedMetric","setSelectedMetric","loading","setLoading","mockData","weightProgress","date","weight","bodyFat","muscleMass","workoutData","week","sessions","volume","duration","muscleGroups","name","percentage","exerciseProgress","exercise","current","start","improvement","nutritionStats","avgProteinDaily","avgCaloriesDaily","adherenceRate","mealsPrepared","cheatsThisMonth","recoveryData","type","quality","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","labels","color","font","size","tooltip","backgroundColor","titleColor","bodyColor","borderColor","borderWidth","scales","x","grid","ticks","y","weightChartData","map","d","format","Date","datasets","label","data","fill","tension","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointRadius","workoutChartData","yAxisID","workoutChartOptions","_objectSpread","y1","display","drawOnChartArea","muscleChartData","m","stats","totalWorkouts","reduce","sum","w","totalVolume","avgWorkoutDuration","Math","round","weightGain","length","toFixed","muscleGain","bodyFatLoss","currentStreak","bestLift","max","ex","_jsxs","className","children","onClick","title","_jsx","value","onChange","e","target","concat","Line","options","Bar","Doughnut","index","style","width","slice","session","repeat","floor"],"mappings":"0MAmBAA,IAAQC,SACJC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,KAkbWC,UA/aWA,KACtB,MAAMC,EAAWC,eACVC,EAAgBC,GAAqBC,mBAAS,YAC9CC,EAAgBC,GAAqBF,mBAAS,WAC9CG,EAASC,GAAcJ,oBAAS,GAGjCK,EAAW,CAEbC,eAAgB,CACZ,CAAEC,KAAM,aAAcC,OAAQ,KAAMC,QAAS,KAAMC,WAAY,MAC/D,CAAEH,KAAM,aAAcC,OAAQ,KAAMC,QAAS,KAAMC,WAAY,MAC/D,CAAEH,KAAM,aAAcC,OAAQ,KAAMC,QAAS,KAAMC,WAAY,MAC/D,CAAEH,KAAM,aAAcC,OAAQ,KAAMC,QAAS,KAAMC,WAAY,MAC/D,CAAEH,KAAM,aAAcC,OAAQ,KAAMC,QAAS,KAAMC,WAAY,MAC/D,CAAEH,KAAM,aAAcC,OAAQ,KAAMC,QAAS,KAAMC,WAAY,MAC/D,CAAEH,KAAM,aAAcC,OAAQ,KAAMC,QAAS,KAAMC,WAAY,OAInEC,YAAa,CACT,CAAEC,KAAM,QAASC,SAAU,EAAGC,OAAQ,MAAOC,SAAU,KACvD,CAAEH,KAAM,QAASC,SAAU,EAAGC,OAAQ,MAAOC,SAAU,KACvD,CAAEH,KAAM,QAASC,SAAU,EAAGC,OAAQ,MAAOC,SAAU,KACvD,CAAEH,KAAM,QAASC,SAAU,EAAGC,OAAQ,MAAOC,SAAU,KACvD,CAAEH,KAAM,QAASC,SAAU,EAAGC,OAAQ,MAAOC,SAAU,KACvD,CAAEH,KAAM,QAASC,SAAU,EAAGC,OAAQ,MAAOC,SAAU,KACvD,CAAEH,KAAM,QAASC,SAAU,EAAGC,OAAQ,MAAOC,SAAU,KACvD,CAAEH,KAAM,QAASC,SAAU,EAAGC,OAAQ,MAAOC,SAAU,MAI3DC,aAAc,CACV,CAAEC,KAAM,QAASJ,SAAU,GAAIK,WAAY,IAC3C,CAAED,KAAM,QAASJ,SAAU,GAAIK,WAAY,IAC3C,CAAED,KAAM,QAASJ,SAAU,GAAIK,WAAY,IAC3C,CAAED,KAAM,SAAUJ,SAAU,GAAIK,WAAY,IAC5C,CAAED,KAAM,UAAWJ,SAAU,GAAIK,WAAY,IAC7C,CAAED,KAAM,OAAQJ,SAAU,GAAIK,WAAY,IAC1C,CAAED,KAAM,SAAUJ,SAAU,EAAGK,WAAY,IAI/CC,iBAAkB,CACd,CAAEC,SAAU,cAAeC,QAAS,GAAIC,MAAO,GAAIC,YAAa,MAChE,CAAEH,SAAU,QAASC,QAAS,IAAKC,MAAO,IAAKC,YAAa,IAC5D,CAAEH,SAAU,WAAYC,QAAS,IAAKC,MAAO,IAAKC,YAAa,MAC/D,CAAEH,SAAU,iBAAkBC,QAAS,GAAIC,MAAO,GAAIC,YAAa,IACnE,CAAEH,SAAU,WAAYC,QAAS,GAAIC,MAAO,EAAGC,YAAa,OAIhEC,eAAgB,CACZC,gBAAiB,IACjBC,iBAAkB,KAClBC,cAAe,GACfC,cAAe,IACfC,gBAAiB,GAIrBC,aAAc,CACV,CAAEvB,KAAM,aAAcwB,KAAM,QAAShB,SAAU,GAAIiB,QAAS,GAC5D,CAAEzB,KAAM,aAAcwB,KAAM,WAAYhB,SAAU,EAAGiB,QAAS,GAC9D,CAAEzB,KAAM,aAAcwB,KAAM,UAAWhB,SAAU,GAAIiB,QAAS,IAC9D,CAAEzB,KAAM,aAAcwB,KAAM,aAAchB,SAAU,GAAIiB,QAAS,GACjE,CAAEzB,KAAM,aAAcwB,KAAM,QAAShB,SAAU,GAAIiB,QAAS,GAC5D,CAAEzB,KAAM,aAAcwB,KAAM,WAAYhB,SAAU,EAAGiB,QAAS,GAC9D,CAAEzB,KAAM,aAAcwB,KAAM,OAAQhB,SAAU,GAAIiB,QAAS,KAK7DC,EAAe,CACjBC,YAAY,EACZC,qBAAqB,EACrBC,QAAS,CACLC,OAAQ,CACJC,SAAU,MACVC,OAAQ,CACJC,MAAO,UACPC,KAAM,CAAEC,KAAM,GAAIlC,OAAQ,UAGlCmC,QAAS,CACLC,gBAAiB,yBACjBC,WAAY,OACZC,UAAW,OACXC,YAAa,UACbC,YAAa,IAGrBC,OAAQ,CACJC,EAAG,CACCC,KAAM,CAAEX,MAAO,0BACfY,MAAO,CAAEZ,MAAO,UAAWC,KAAM,CAAEjC,OAAQ,UAE/C6C,EAAG,CACCF,KAAM,CAAEX,MAAO,0BACfY,MAAO,CAAEZ,MAAO,UAAWC,KAAM,CAAEjC,OAAQ,YAMjD8C,EAAkB,CACpBf,OAAQlC,EAASC,eAAeiD,IAAIC,GAAKC,YAAO,IAAIC,KAAKF,EAAEjD,MAAO,UAClEoD,SAAU,CACN,CACIC,MAAO,YACPC,KAAMxD,EAASC,eAAeiD,IAAIC,GAAKA,EAAEhD,QACzCuC,YAAa,UACbH,gBAAiB,yBACjBI,YAAa,EACbc,MAAM,EACNC,QAAS,GACTC,qBAAsB,UACtBC,iBAAkB,UAClBC,iBAAkB,EAClBC,YAAa,GAEjB,CACIP,MAAO,uBACPC,KAAMxD,EAASC,eAAeiD,IAAIC,GAAKA,EAAE9C,YACzCqC,YAAa,UACbH,gBAAiB,yBACjBI,YAAa,EACbc,MAAM,EACNC,QAAS,GACTC,qBAAsB,UACtBC,iBAAkB,UAClBC,iBAAkB,EAClBC,YAAa,KAMnBC,EAAmB,CACrB7B,OAAQlC,EAASM,YAAY4C,IAAIC,GAAKA,EAAE5C,MACxC+C,SAAU,CACN,CACIC,MAAO,cACPC,KAAMxD,EAASM,YAAY4C,IAAIC,GAAKA,EAAE1C,QACtC8B,gBAAiB,yBACjBG,YAAa,UACbC,YAAa,GAEjB,CACIY,MAAO,eACPC,KAAMxD,EAASM,YAAY4C,IAAIC,GAAKA,EAAEzC,UACtC6B,gBAAiB,yBACjBG,YAAa,UACbC,YAAa,EACbqB,QAAS,QAKfC,EAAmBC,wBAAA,GAClBtC,GAAY,IACfgB,OAAMsB,wBAAA,GACCtC,EAAagB,QAAM,IACtBuB,GAAI,CACAzC,KAAM,SACN0C,SAAS,EACTnC,SAAU,QACVa,KAAM,CAAEuB,iBAAiB,GACzBtB,MAAO,CAAEZ,MAAO,UAAWC,KAAM,CAAEjC,OAAQ,cAMjDmE,EAAkB,CACpBpC,OAAQlC,EAASW,aAAauC,IAAIqB,GAAKA,EAAE3D,MACzC0C,SAAU,CACN,CACIE,KAAMxD,EAASW,aAAauC,IAAIqB,GAAKA,EAAE1D,YACvC0B,gBAAiB,CACb,UAAW,UAAW,UAAW,UACjC,UAAW,UAAW,WAE1BG,YAAa,OACbC,YAAa,KAMnB6B,EAAQ,CACVC,cAAezE,EAASM,YAAYoE,OAAO,CAACC,EAAKC,IAAMD,EAAMC,EAAEpE,SAAU,GACzEqE,YAAa7E,EAASM,YAAYoE,OAAO,CAACC,EAAKC,IAAMD,EAAMC,EAAEnE,OAAQ,GACrEqE,mBAAoBC,KAAKC,MACrBhF,EAASM,YAAYoE,OAAO,CAACC,EAAKC,IAAMD,EAAMC,EAAElE,SAAU,GAC1DV,EAASM,YAAYoE,OAAO,CAACC,EAAKC,IAAMD,EAAMC,EAAEpE,SAAU,IAE9DyE,YAAajF,EAASC,eAAeD,EAASC,eAAeiF,OAAS,GAAG/E,OAASH,EAASC,eAAe,GAAGE,QAAQgF,QAAQ,GAC7HC,YAAapF,EAASC,eAAeD,EAASC,eAAeiF,OAAS,GAAG7E,WAAaL,EAASC,eAAe,GAAGI,YAAY8E,QAAQ,GACrIE,aAAcrF,EAASC,eAAe,GAAGG,QAAUJ,EAASC,eAAeD,EAASC,eAAeiF,OAAS,GAAG9E,SAAS+E,QAAQ,GAChIG,cAAe,GACfC,SAAUvF,EAASc,iBAAiB4D,OAAO,CAACc,EAAKC,IAAOA,EAAGzE,QAAUwE,EAAMC,EAAGzE,QAAUwE,EAAK,IAGjG,OACIE,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAE9BF,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC7BF,eAAA,UACIC,UAAU,cACVE,QAASA,IAAMtG,EAAS,KACxBuG,MAAM,uBAAsBF,SAAA,CAE5BG,cAAA,QAAMJ,UAAU,YAAWC,SAAC,WAC5BG,cAAA,QAAMJ,UAAU,YAAWC,SAAC,iBAGhCF,eAAA,OAAKC,UAAU,eAAcC,SAAA,CACzBG,cAAA,MAAAH,SAAI,sCACJG,cAAA,KAAGJ,UAAU,WAAUC,SAAC,4DAG5BG,cAAA,OAAKJ,UAAU,kBAAiBC,SAC5BF,eAAA,UACIM,MAAOvG,EACPwG,SAAWC,GAAMxG,EAAkBwG,EAAEC,OAAOH,OAC5CL,UAAU,gBAAeC,SAAA,CAEzBG,cAAA,UAAQC,MAAM,SAAQJ,SAAC,WACvBG,cAAA,UAAQC,MAAM,UAASJ,SAAC,WACxBG,cAAA,UAAQC,MAAM,UAASJ,SAAC,WACxBG,cAAA,UAAQC,MAAM,QAAOJ,SAAC,mBAMlCF,eAAA,OAAKC,UAAU,WAAUC,SAAA,CACrBF,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC7BG,cAAA,OAAKJ,UAAU,WAAUC,SAAC,iBAC1BF,eAAA,OAAKC,UAAU,WAAUC,SAAA,CACrBF,eAAA,QAAMC,UAAU,YAAWC,SAAA,CAAC,IAAEpB,EAAMS,WAAW,QAC/Cc,cAAA,QAAMJ,UAAU,YAAWC,SAAC,mBAEhCG,cAAA,OAAKJ,UAAU,eAAcC,SAAC,mBAGlCF,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC7BG,cAAA,OAAKJ,UAAU,WAAUC,SAAC,iBAC1BF,eAAA,OAAKC,UAAU,WAAUC,SAAA,CACrBF,eAAA,QAAMC,UAAU,YAAWC,SAAA,CAAC,IAAEpB,EAAMY,WAAW,QAC/CW,cAAA,QAAMJ,UAAU,YAAWC,SAAC,uBAEhCG,cAAA,OAAKJ,UAAU,eAAcC,SAAC,mBAGlCF,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC7BG,cAAA,OAAKJ,UAAU,WAAUC,SAAC,iBAC1BF,eAAA,OAAKC,UAAU,WAAUC,SAAA,CACrBF,eAAA,QAAMC,UAAU,YAAWC,SAAA,CAAC,IAAEpB,EAAMa,YAAY,OAChDU,cAAA,QAAMJ,UAAU,YAAWC,SAAC,uBAEhCG,cAAA,OAAKJ,UAAU,iBAAgBC,SAAC,mBAGpCF,eAAA,OAAKC,UAAU,gBAAeC,SAAA,CAC1BG,cAAA,OAAKJ,UAAU,WAAUC,SAAC,iBAC1BF,eAAA,OAAKC,UAAU,WAAUC,SAAA,CACrBG,cAAA,QAAMJ,UAAU,YAAWC,SAAEpB,EAAMc,gBACnCS,cAAA,QAAMJ,UAAU,YAAWC,SAAC,0BAEhCG,cAAA,OAAKJ,UAAU,eAAcC,SAAC,+BAKtCF,eAAA,OAAKC,UAAU,cAAaC,SAAA,CAExBF,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC5BF,eAAA,OAAKC,UAAU,eAAcC,SAAA,CACzBG,cAAA,MAAAH,SAAI,iDACJF,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC3BG,cAAA,UACIJ,UAAS,eAAAS,OAAoC,WAAnBxG,EAA8B,SAAW,IACnEiG,QAASA,IAAMhG,EAAkB,UAAU+F,SAC9C,SAGDG,cAAA,UACIJ,UAAS,eAAAS,OAAoC,WAAnBxG,EAA8B,SAAW,IACnEiG,QAASA,IAAMhG,EAAkB,UAAU+F,SAC9C,kBAKTG,cAAA,OAAKJ,UAAU,gBAAeC,SAC1BG,cAACM,IAAI,CAAC7C,KAAMP,EAAiBqD,QAAS1E,SAK9C8D,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC5BF,eAAA,OAAKC,UAAU,eAAcC,SAAA,CACzBG,cAAA,MAAAH,SAAI,mDACJG,cAAA,OAAKJ,UAAU,cAAaC,SACxBF,eAAA,QAAAE,SAAA,CAAM,iBAAeb,KAAKC,MAAMR,EAAMK,YAAc7E,EAASM,YAAY4E,QAAQ,aAGzFa,cAAA,OAAKJ,UAAU,gBAAeC,SAC1BG,cAACQ,IAAG,CAAC/C,KAAMO,EAAkBuC,QAASrC,SAK9CyB,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC5BF,eAAA,OAAKC,UAAU,eAAcC,SAAA,CACzBG,cAAA,MAAAH,SAAI,gDACJG,cAAA,OAAKJ,UAAU,cAAaC,SACxBF,eAAA,QAAAE,SAAA,CAAM,oBAAkBpB,EAAMC,sBAGtCsB,cAAA,OAAKJ,UAAU,gBAAeC,SAC1BG,cAACS,IAAQ,CAAChD,KAAMc,EAAiBgC,QAAS1E,YAMtD8D,eAAA,OAAKC,UAAU,wBAAuBC,SAAA,CAClCG,cAAA,MAAAH,SAAI,0CACJG,cAAA,OAAKJ,UAAU,iBAAgBC,SAC1B5F,EAASc,iBAAiBoC,IAAI,CAACnC,EAAU0F,IACtCf,eAAA,OAAiBC,UAAU,gBAAeC,SAAA,CACtCF,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC5BG,cAAA,MAAAH,SAAK7E,EAASA,WACd2E,eAAA,QAAMC,UAAU,cAAaC,SAAA,CAAC,IAAE7E,EAASG,YAAY,UAEzDwE,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAC9BG,cAAA,OAAKJ,UAAU,eAAcC,SACzBG,cAAA,OACIJ,UAAU,gBACVe,MAAO,CAAEC,MAAM,GAADP,OAAMrF,EAASC,QAAU,IAAO,IAAG,UAGzD0E,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC3BF,eAAA,QAAAE,SAAA,CAAM,YAASF,eAAA,UAAAE,SAAA,CAAS7E,EAASC,QAAQ,WACzC0E,eAAA,QAAAE,SAAA,CAAM,WAAS7E,EAASE,MAAM,gBAdhCwF,SAuBtBf,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC5BF,eAAA,OAAKC,UAAU,eAAcC,SAAA,CACzBG,cAAA,MAAAH,SAAI,oCACJF,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACvBF,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACtBG,cAAA,OAAKJ,UAAU,YAAWC,SAAC,iBAC3BF,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACtBF,eAAA,QAAMC,UAAU,aAAYC,SAAA,CAAE5F,EAASmB,eAAeC,gBAAgB,OACtE2E,cAAA,QAAMJ,UAAU,aAAYC,SAAC,0BAGrCF,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACtBG,cAAA,OAAKJ,UAAU,YAAWC,SAAC,iBAC3BF,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACtBG,cAAA,QAAMJ,UAAU,aAAYC,SAAE5F,EAASmB,eAAeE,mBACtD0E,cAAA,QAAMJ,UAAU,aAAYC,SAAC,yBAGrCF,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACtBG,cAAA,OAAKJ,UAAU,YAAWC,SAAC,iBAC3BF,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACtBF,eAAA,QAAMC,UAAU,aAAYC,SAAA,CAAE5F,EAASmB,eAAeG,cAAc,OACpEyE,cAAA,QAAMJ,UAAU,aAAYC,SAAC,+BAM7CF,eAAA,OAAKC,UAAU,eAAcC,SAAA,CACzBG,cAAA,MAAAH,SAAI,mCACJG,cAAA,OAAKJ,UAAU,gBAAeC,SACzB5F,EAASyB,aAAamF,MAAM,EAAG,GAAG1D,IAAI,CAAC2D,EAASJ,IAC7Cf,eAAA,OAAiBC,UAAU,gBAAeC,SAAA,CACtCG,cAAA,OAAKJ,UAAU,gBAAeC,SAAEiB,EAAQnF,OACxCgE,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAAEiB,EAAQnG,SAAS,SACrDqF,cAAA,OAAKJ,UAAU,mBAAkBC,SAC5B,SAAIkB,OAAO/B,KAAKgC,MAAMF,EAAQlF,QAAU,QAJvC8E,YAa1Bf,eAAA,OAAKC,UAAU,cAAaC,SAAA,CACxBG,cAAA,MAAAH,SAAI,+CACJF,eAAA,OAAKC,UAAU,gBAAeC,SAAA,CAC1BF,eAAA,OAAKC,UAAU,uBAAsBC,SAAA,CACjCG,cAAA,OAAKJ,UAAU,eAAcC,SAAC,iBAC9BF,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC5BG,cAAA,MAAAH,SAAI,4BACJG,cAAA,KAAAH,SAAG,4FAGXF,eAAA,OAAKC,UAAU,uBAAsBC,SAAA,CACjCG,cAAA,OAAKJ,UAAU,eAAcC,SAAC,WAC9BF,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC5BG,cAAA,MAAAH,SAAI,yBACJG,cAAA,KAAAH,SAAG,+FAGXF,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAC9BG,cAAA,OAAKJ,UAAU,eAAcC,SAAC,iBAC9BF,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC5BG,cAAA,MAAAH,SAAI,sBACJG,cAAA,KAAAH,SAAG,wG","file":"static/js/4.6acd7855.chunk.js","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    Filler,\r\n    ArcElement\r\n} from 'chart.js';\r\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\r\nimport { format, subDays, startOfWeek, endOfWeek, eachDayOfInterval } from 'date-fns';\r\nimport { it } from 'date-fns/locale';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    Filler,\r\n    ArcElement\r\n);\r\n\r\nconst AdvancedAnalytics = () => {\r\n    const navigate = useNavigate();\r\n    const [selectedPeriod, setSelectedPeriod] = useState('3months');\r\n    const [selectedMetric, setSelectedMetric] = useState('weight');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    // DATI MOCK REALISTICI - ENTERPRISE LEVEL\r\n    const mockData = {\r\n        // Dati peso corporeo ultimi 3 mesi\r\n        weightProgress: [\r\n            { date: '2024-06-01', weight: 75.2, bodyFat: 15.5, muscleMass: 34.2 },\r\n            { date: '2024-06-15', weight: 76.1, bodyFat: 15.2, muscleMass: 34.8 },\r\n            { date: '2024-07-01', weight: 76.8, bodyFat: 14.8, muscleMass: 35.4 },\r\n            { date: '2024-07-15', weight: 77.5, bodyFat: 14.5, muscleMass: 36.1 },\r\n            { date: '2024-08-01', weight: 78.2, bodyFat: 14.1, muscleMass: 36.8 },\r\n            { date: '2024-08-15', weight: 79.1, bodyFat: 13.8, muscleMass: 37.5 },\r\n            { date: '2024-09-01', weight: 79.8, bodyFat: 13.5, muscleMass: 38.2 }\r\n        ],\r\n        \r\n        // Dati allenamenti settimanali\r\n        workoutData: [\r\n            { week: 'Set 1', sessions: 5, volume: 12500, duration: 360 },\r\n            { week: 'Set 2', sessions: 4, volume: 11800, duration: 280 },\r\n            { week: 'Set 3', sessions: 6, volume: 14200, duration: 420 },\r\n            { week: 'Set 4', sessions: 5, volume: 13600, duration: 380 },\r\n            { week: 'Ago 1', sessions: 5, volume: 13200, duration: 350 },\r\n            { week: 'Ago 2', sessions: 4, volume: 12100, duration: 300 },\r\n            { week: 'Ago 3', sessions: 6, volume: 15800, duration: 450 },\r\n            { week: 'Ago 4', sessions: 5, volume: 14400, duration: 400 }\r\n        ],\r\n\r\n        // Distribuzione gruppi muscolari\r\n        muscleGroups: [\r\n            { name: 'Petto', sessions: 24, percentage: 20 },\r\n            { name: 'Dorso', sessions: 22, percentage: 18 },\r\n            { name: 'Gambe', sessions: 18, percentage: 15 },\r\n            { name: 'Spalle', sessions: 16, percentage: 13 },\r\n            { name: 'Braccia', sessions: 20, percentage: 17 },\r\n            { name: 'Core', sessions: 12, percentage: 10 },\r\n            { name: 'Cardio', sessions: 8, percentage: 7 }\r\n        ],\r\n\r\n        // Performance principali esercizi\r\n        exerciseProgress: [\r\n            { exercise: 'Panca Piana', current: 95, start: 75, improvement: 26.7 },\r\n            { exercise: 'Squat', current: 125, start: 100, improvement: 25.0 },\r\n            { exercise: 'Deadlift', current: 155, start: 120, improvement: 29.2 },\r\n            { exercise: 'Military Press', current: 65, start: 50, improvement: 30.0 },\r\n            { exercise: 'Trazioni', current: 15, start: 8, improvement: 87.5 }\r\n        ],\r\n\r\n        // Dati nutrition\r\n        nutritionStats: {\r\n            avgProteinDaily: 145,\r\n            avgCaloriesDaily: 2850,\r\n            adherenceRate: 87,\r\n            mealsPrepared: 156,\r\n            cheatsThisMonth: 4\r\n        },\r\n\r\n        // Dati recovery\r\n        recoveryData: [\r\n            { date: '2024-08-01', type: 'Sauna', duration: 20, quality: 9 },\r\n            { date: '2024-08-03', type: 'Ice Bath', duration: 5, quality: 8 },\r\n            { date: '2024-08-05', type: 'Massage', duration: 60, quality: 10 },\r\n            { date: '2024-08-08', type: 'Stretching', duration: 30, quality: 7 },\r\n            { date: '2024-08-10', type: 'Sauna', duration: 25, quality: 9 },\r\n            { date: '2024-08-12', type: 'Ice Bath', duration: 4, quality: 8 },\r\n            { date: '2024-08-15', type: 'Yoga', duration: 45, quality: 8 }\r\n        ]\r\n    };\r\n\r\n    // CONFIGURAZIONE GRAFICI\r\n    const chartOptions = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n            legend: {\r\n                position: 'top',\r\n                labels: {\r\n                    color: '#00ffff',\r\n                    font: { size: 12, weight: 'bold' }\r\n                }\r\n            },\r\n            tooltip: {\r\n                backgroundColor: 'rgba(0, 255, 255, 0.9)',\r\n                titleColor: '#000',\r\n                bodyColor: '#000',\r\n                borderColor: '#00ffff',\r\n                borderWidth: 2\r\n            }\r\n        },\r\n        scales: {\r\n            x: {\r\n                grid: { color: 'rgba(0, 255, 255, 0.1)' },\r\n                ticks: { color: '#00ffff', font: { weight: 'bold' } }\r\n            },\r\n            y: {\r\n                grid: { color: 'rgba(0, 255, 255, 0.1)' },\r\n                ticks: { color: '#00ffff', font: { weight: 'bold' } }\r\n            }\r\n        }\r\n    };\r\n\r\n    // GRAFICO PROGRESSO PESO\r\n    const weightChartData = {\r\n        labels: mockData.weightProgress.map(d => format(new Date(d.date), 'dd/MM')),\r\n        datasets: [\r\n            {\r\n                label: 'Peso (kg)',\r\n                data: mockData.weightProgress.map(d => d.weight),\r\n                borderColor: '#00ffff',\r\n                backgroundColor: 'rgba(0, 255, 255, 0.1)',\r\n                borderWidth: 3,\r\n                fill: true,\r\n                tension: 0.4,\r\n                pointBackgroundColor: '#ff9500',\r\n                pointBorderColor: '#00ffff',\r\n                pointBorderWidth: 2,\r\n                pointRadius: 6\r\n            },\r\n            {\r\n                label: 'Massa Muscolare (kg)',\r\n                data: mockData.weightProgress.map(d => d.muscleMass),\r\n                borderColor: '#ff9500',\r\n                backgroundColor: 'rgba(255, 149, 0, 0.1)',\r\n                borderWidth: 3,\r\n                fill: true,\r\n                tension: 0.4,\r\n                pointBackgroundColor: '#00ffff',\r\n                pointBorderColor: '#ff9500',\r\n                pointBorderWidth: 2,\r\n                pointRadius: 6\r\n            }\r\n        ]\r\n    };\r\n\r\n    // GRAFICO VOLUME ALLENAMENTI\r\n    const workoutChartData = {\r\n        labels: mockData.workoutData.map(d => d.week),\r\n        datasets: [\r\n            {\r\n                label: 'Volume (kg)',\r\n                data: mockData.workoutData.map(d => d.volume),\r\n                backgroundColor: 'rgba(0, 255, 255, 0.8)',\r\n                borderColor: '#00ffff',\r\n                borderWidth: 2\r\n            },\r\n            {\r\n                label: 'Durata (min)',\r\n                data: mockData.workoutData.map(d => d.duration),\r\n                backgroundColor: 'rgba(255, 149, 0, 0.8)',\r\n                borderColor: '#ff9500',\r\n                borderWidth: 2,\r\n                yAxisID: 'y1'\r\n            }\r\n        ]\r\n    };\r\n\r\n    const workoutChartOptions = {\r\n        ...chartOptions,\r\n        scales: {\r\n            ...chartOptions.scales,\r\n            y1: {\r\n                type: 'linear',\r\n                display: true,\r\n                position: 'right',\r\n                grid: { drawOnChartArea: false },\r\n                ticks: { color: '#ff9500', font: { weight: 'bold' } }\r\n            }\r\n        }\r\n    };\r\n\r\n    // GRAFICO DISTRIBUZIONE MUSCOLI\r\n    const muscleChartData = {\r\n        labels: mockData.muscleGroups.map(m => m.name),\r\n        datasets: [\r\n            {\r\n                data: mockData.muscleGroups.map(m => m.percentage),\r\n                backgroundColor: [\r\n                    '#00ffff', '#ff9500', '#ff6b6b', '#4ecdc4', \r\n                    '#45b7d1', '#96ceb4', '#feca57'\r\n                ],\r\n                borderColor: '#000',\r\n                borderWidth: 2\r\n            }\r\n        ]\r\n    };\r\n\r\n    // STATISTICHE CALCOLATE\r\n    const stats = {\r\n        totalWorkouts: mockData.workoutData.reduce((sum, w) => sum + w.sessions, 0),\r\n        totalVolume: mockData.workoutData.reduce((sum, w) => sum + w.volume, 0),\r\n        avgWorkoutDuration: Math.round(\r\n            mockData.workoutData.reduce((sum, w) => sum + w.duration, 0) / \r\n            mockData.workoutData.reduce((sum, w) => sum + w.sessions, 0)\r\n        ),\r\n        weightGain: (mockData.weightProgress[mockData.weightProgress.length - 1].weight - mockData.weightProgress[0].weight).toFixed(1),\r\n        muscleGain: (mockData.weightProgress[mockData.weightProgress.length - 1].muscleMass - mockData.weightProgress[0].muscleMass).toFixed(1),\r\n        bodyFatLoss: (mockData.weightProgress[0].bodyFat - mockData.weightProgress[mockData.weightProgress.length - 1].bodyFat).toFixed(1),\r\n        currentStreak: 12,\r\n        bestLift: mockData.exerciseProgress.reduce((max, ex) => ex.current > max ? ex.current : max, 0)\r\n    };\r\n\r\n    return (\r\n        <div className=\"analytics-premium\">\r\n            {/* HEADER CON BACK BUTTON */}\r\n            <div className=\"analytics-header\">\r\n                <button \r\n                    className=\"back-button\"\r\n                    onClick={() => navigate('/')}\r\n                    title=\"Torna alla Dashboard\"\r\n                >\r\n                    <span className=\"back-icon\">←</span>\r\n                    <span className=\"back-text\">Dashboard</span>\r\n                </button>\r\n                \r\n                <div className=\"header-title\">\r\n                    <h1>📊 ANALYTICS ENTERPRISE</h1>\r\n                    <p className=\"subtitle\">Dashboard avanzata per il monitoraggio dei progressi</p>\r\n                </div>\r\n\r\n                <div className=\"period-selector\">\r\n                    <select \r\n                        value={selectedPeriod} \r\n                        onChange={(e) => setSelectedPeriod(e.target.value)}\r\n                        className=\"period-select\"\r\n                    >\r\n                        <option value=\"1month\">1 Mese</option>\r\n                        <option value=\"3months\">3 Mesi</option>\r\n                        <option value=\"6months\">6 Mesi</option>\r\n                        <option value=\"1year\">1 Anno</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            {/* KPI CARDS */}\r\n            <div className=\"kpi-grid\">\r\n                <div className=\"kpi-card primary\">\r\n                    <div className=\"kpi-icon\">💪</div>\r\n                    <div className=\"kpi-data\">\r\n                        <span className=\"kpi-value\">+{stats.weightGain}kg</span>\r\n                        <span className=\"kpi-label\">Peso Totale</span>\r\n                    </div>\r\n                    <div className=\"kpi-trend up\">↗ +15%</div>\r\n                </div>\r\n\r\n                <div className=\"kpi-card success\">\r\n                    <div className=\"kpi-icon\">🔥</div>\r\n                    <div className=\"kpi-data\">\r\n                        <span className=\"kpi-value\">+{stats.muscleGain}kg</span>\r\n                        <span className=\"kpi-label\">Massa Muscolare</span>\r\n                    </div>\r\n                    <div className=\"kpi-trend up\">↗ +12%</div>\r\n                </div>\r\n\r\n                <div className=\"kpi-card warning\">\r\n                    <div className=\"kpi-icon\">⚖️</div>\r\n                    <div className=\"kpi-data\">\r\n                        <span className=\"kpi-value\">-{stats.bodyFatLoss}%</span>\r\n                        <span className=\"kpi-label\">Grasso Corporeo</span>\r\n                    </div>\r\n                    <div className=\"kpi-trend down\">↘ -13%</div>\r\n                </div>\r\n\r\n                <div className=\"kpi-card info\">\r\n                    <div className=\"kpi-icon\">🏆</div>\r\n                    <div className=\"kpi-data\">\r\n                        <span className=\"kpi-value\">{stats.currentStreak}</span>\r\n                        <span className=\"kpi-label\">Giorni Consecutivi</span>\r\n                    </div>\r\n                    <div className=\"kpi-trend up\">🔥 Streak!</div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* GRAFICI PRINCIPALI */}\r\n            <div className=\"charts-grid\">\r\n                {/* Grafico Progresso Peso */}\r\n                <div className=\"chart-container\">\r\n                    <div className=\"chart-header\">\r\n                        <h3>📈 PROGRESSO COMPOSIZIONE CORPOREA</h3>\r\n                        <div className=\"chart-controls\">\r\n                            <button \r\n                                className={`control-btn ${selectedMetric === 'weight' ? 'active' : ''}`}\r\n                                onClick={() => setSelectedMetric('weight')}\r\n                            >\r\n                                Peso\r\n                            </button>\r\n                            <button \r\n                                className={`control-btn ${selectedMetric === 'muscle' ? 'active' : ''}`}\r\n                                onClick={() => setSelectedMetric('muscle')}\r\n                            >\r\n                                Muscoli\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"chart-wrapper\">\r\n                        <Line data={weightChartData} options={chartOptions} />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Grafico Volume Allenamenti */}\r\n                <div className=\"chart-container\">\r\n                    <div className=\"chart-header\">\r\n                        <h3>🏋️ VOLUME & DURATA ALLENAMENTI</h3>\r\n                        <div className=\"chart-stats\">\r\n                            <span>Volume Medio: {Math.round(stats.totalVolume / mockData.workoutData.length)}kg</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"chart-wrapper\">\r\n                        <Bar data={workoutChartData} options={workoutChartOptions} />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Grafico Distribuzione Muscoli */}\r\n                <div className=\"chart-container\">\r\n                    <div className=\"chart-header\">\r\n                        <h3>🎯 DISTRIBUZIONE GRUPPI MUSCOLARI</h3>\r\n                        <div className=\"chart-stats\">\r\n                            <span>Sessioni Totali: {stats.totalWorkouts}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"chart-wrapper\">\r\n                        <Doughnut data={muscleChartData} options={chartOptions} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* PERFORMANCE ESERCIZI */}\r\n            <div className=\"exercises-performance\">\r\n                <h3>🏆 TOP PERFORMANCE ESERCIZI</h3>\r\n                <div className=\"exercises-grid\">\r\n                    {mockData.exerciseProgress.map((exercise, index) => (\r\n                        <div key={index} className=\"exercise-card\">\r\n                            <div className=\"exercise-header\">\r\n                                <h4>{exercise.exercise}</h4>\r\n                                <span className=\"improvement\">+{exercise.improvement}%</span>\r\n                            </div>\r\n                            <div className=\"exercise-progress\">\r\n                                <div className=\"progress-bar\">\r\n                                    <div \r\n                                        className=\"progress-fill\"\r\n                                        style={{ width: `${(exercise.current / 200) * 100}%` }}\r\n                                    ></div>\r\n                                </div>\r\n                                <div className=\"exercise-stats\">\r\n                                    <span>Attuale: <strong>{exercise.current}kg</strong></span>\r\n                                    <span>Inizio: {exercise.start}kg</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* NUTRITION & RECOVERY STATS */}\r\n            <div className=\"secondary-stats\">\r\n                <div className=\"stat-section\">\r\n                    <h3>🥗 NUTRITION INSIGHTS</h3>\r\n                    <div className=\"stat-cards\">\r\n                        <div className=\"stat-card\">\r\n                            <div className=\"stat-icon\">💪</div>\r\n                            <div className=\"stat-info\">\r\n                                <span className=\"stat-value\">{mockData.nutritionStats.avgProteinDaily}g</span>\r\n                                <span className=\"stat-label\">Proteine/Giorno</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"stat-card\">\r\n                            <div className=\"stat-icon\">🔥</div>\r\n                            <div className=\"stat-info\">\r\n                                <span className=\"stat-value\">{mockData.nutritionStats.avgCaloriesDaily}</span>\r\n                                <span className=\"stat-label\">Calorie/Giorno</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"stat-card\">\r\n                            <div className=\"stat-icon\">📊</div>\r\n                            <div className=\"stat-info\">\r\n                                <span className=\"stat-value\">{mockData.nutritionStats.adherenceRate}%</span>\r\n                                <span className=\"stat-label\">Aderenza Dieta</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"stat-section\">\r\n                    <h3>🛁 RECOVERY INSIGHTS</h3>\r\n                    <div className=\"recovery-list\">\r\n                        {mockData.recoveryData.slice(0, 4).map((session, index) => (\r\n                            <div key={index} className=\"recovery-item\">\r\n                                <div className=\"recovery-type\">{session.type}</div>\r\n                                <div className=\"recovery-duration\">{session.duration}min</div>\r\n                                <div className=\"recovery-quality\">\r\n                                    {'★'.repeat(Math.floor(session.quality / 2))}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* INSIGHTS AI */}\r\n            <div className=\"ai-insights\">\r\n                <h3>🤖 AI INSIGHTS & RACCOMANDAZIONI</h3>\r\n                <div className=\"insights-grid\">\r\n                    <div className=\"insight-card success\">\r\n                        <div className=\"insight-icon\">🎯</div>\r\n                        <div className=\"insight-content\">\r\n                            <h4>Eccellente Progressione</h4>\r\n                            <p>Il tuo aumento di massa muscolare è sopra la media! Continua con questo ritmo.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"insight-card warning\">\r\n                        <div className=\"insight-icon\">⚡</div>\r\n                        <div className=\"insight-content\">\r\n                            <h4>Aumenta Volume Gambe</h4>\r\n                            <p>Le gambe rappresentano solo il 15% del volume. Considera di aggiungere una sessione.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"insight-card info\">\r\n                        <div className=\"insight-icon\">🏆</div>\r\n                        <div className=\"insight-content\">\r\n                            <h4>Recovery Ottimale</h4>\r\n                            <p>Le tue sessioni di recupero sono bilanciate. Perfetto equilibrio allenamento-riposo!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdvancedAnalytics;"],"sourceRoot":""}